{% extends 'base.html.twig' %}

{% block title %}QUIZ || QUESTION
{% endblock %}

{% block body %}
	<div id="quiz-container">


		{% block main %}
			<div class="fixed inset-0 bg-[#6E433C] bg-opacity-50 z-0 h-full w-full"></div>

			<!-- Section principale -->
			<section class="relative h-full max-w-full my-[39px] mx-[30px] p-2 bg-gradient-clair-orange border-t-[7px] border-l-[7px] border-r-[15px] border-b-[15px] border-primary rounded-[42px] overflow-hidden">

				{% block header %}
					{% include "header/headerQuestion.html.twig" %}
				{% endblock %}

				<form id="question-form">
					<input type="hidden" name="question_id" value="{{ question.id }}">
					<input type="hidden" name="index" value="{{ index }}">

					<div class="answers-grid">
						{% for answer in question.answers %}
							<div class="answer-container" data-answer-id="{{ answer.id }}">
								<input type="radio" name="answer" value="{{ answer.id }}" id="answer-{{ answer.id }}" hidden>
								<label for="answer-{{ answer.id }}">{{ answer.getAnswer }}</label>
							</div>
						{% endfor %}
					</div>

					<button type="submit" class="btn-custom4 btn">Valider</button>
				</form>


			{% endblock %}

			{% block footer %}
				{% include "footer/footerQuestion.html.twig" %}


			{% endblock %}

{% block javascriptsQUIZ %}
<script>
  // Fonction qui peut être appelée au chargement complet de la page
  function initQuiz() {
    console.log("initQuiz() appelé");
    // Ici, rien de spécifique à faire, car on utilise l'event delegation sur document
  }

  // Gestion globale du clic sur une réponse
  document.addEventListener('click', function(event) {
    // Vérifie si le clic est sur ou dans une .answer-container
    const container = event.target.closest('.answer-container');
    if (!container) return;
    
    // Retire "selected" de toutes les réponses
    document.querySelectorAll('.answer-container').forEach(c => c.classList.remove('selected'));
    // Ajoute "selected" à la réponse cliquée
    container.classList.add('selected');
    const radio = container.querySelector('input[type="radio"]');
    if (radio) radio.checked = true;
  });

  // Gestion globale de la soumission du formulaire de question
  document.addEventListener('submit', function(event) {
    // On traite uniquement le formulaire avec l'id "question-form"
    if (!event.target.matches('#question-form')) return;
    
    event.preventDefault();
    console.log("Formulaire soumis");
    
    const form = event.target;
    const formData = new FormData(form);
    const questionId = formData.get('question_id');
    const answerId = formData.get('answer');
    const index = parseInt(formData.get('index')) + 1;
    
    if (!answerId) {
      alert("Veuillez sélectionner une réponse !");
      return;
    }
    
    // Envoi de la réponse pour vérification
    fetch(`/question/{{ quiz.Slug }}/check`, {
      method: 'POST',
      body: JSON.stringify({ question_id: questionId, answer_id: answerId }),
      headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
      const selectedContainer = document.querySelector(`.answer-container[data-answer-id="${answerId}"]`);
      if (selectedContainer) {
        selectedContainer.classList.add(data.correct ? 'true' : 'false');
      }
      
      // Après 1 seconde, passer à la question suivante ou finir
      setTimeout(() => {
        if (index < {{ totalQuestions }}) {
          fetch(`/question/{{ quiz.Slug }}/next?index=${index}`, { method: 'GET' })
          .then(response => response.text())
          .then(html => {
            // Remplacer uniquement le contenu de #quiz-container
            document.getElementById('quiz-container').innerHTML = html;
          });
        } else {
          window.location.href = `/question/{{ quiz.Slug }}/finish`;
        }
      }, 1000);
    });
  });

  // Écouteur pour Turbo ou DOMContentLoaded
  if (window.Turbo) {
    document.addEventListener('turbo:load', initQuiz);
  } else {
    document.addEventListener('DOMContentLoaded', initQuiz);
  }
</script>
{% endblock %}





		</section>

	</div>
{% endblock %}
